 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
         vector<int> ans;
        if(root == NULL) 
            return root;    
        queue<TreeNode*> q; 
        stack<TreeNode*> st;
        q.push(root); 
        int l=0;
        while(!q.empty()) {
            vector<int> level;
            int n=q.size();
            for(int i=0;i<n;i++){
                TreeNode* Node=q.front();
                q.pop();
                if(Node->left!=NULL)
                    q.push(Node->left);
                if(Node->right!=NULL)
                    q.push(Node->right);
                if(l%2==1){
                    st.push(Node);
                    level.push_back(Node->val);
                }
            }    
            if(l%2==1)
            {
                int sz=level.size();
                int idx=0;
                while(!st.empty())
                {
                    TreeNode* Node=st.top();
                    st.pop();
                    Node->val=level[idx];
                    idx++;    
                }
            }
            l++;   
        }
        return root;
    }
};
